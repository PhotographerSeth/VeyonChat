name: Build Veyon Plugin

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    # 1. Check out your plugin's source code
    - name: Check out plugin repository
      uses: actions/checkout@v4
      with:
        path: plugin_src

    # 2. Install the required version of Qt
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        arch: 'win64_msvc2019_64'

    # 3. Check out the official Veyon source code
    - name: Check out Veyon repository
      # FIX: Use a more robust checkout process for full history
      uses: actions/checkout@v3
      with:
        repository: veyon/veyon
        path: veyon_src
        ref: 'v4.9.7'
        fetch-depth: 0
        lfs: true

    # 4. Build Veyon from source
    - name: Build Veyon
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        cd veyon_src

        rem Add a diagnostic step to ensure the Qt5_Dir variable is set
        echo "Qt5_Dir is set to: %Qt5_Dir%"

        rem FIX: Pass the Qt5 directory directly to CMake's Qt6_DIR variable
        cmake -S . -B build -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DQt6_DIR=%Qt5_Dir%
        
        cmake --build build --config Release

    # 5. Build the VeyonChat plugin
    - name: Build Plugin
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        cd plugin_src
        set VEYON_BUILD_DIR=%GITHUB_WORKSPACE%\veyon_src\build
        qmake VeyonChat.pro
        nmake /f Makefile.Release
      env:
        QT_PLUGIN_PATH: ${{ env.Qt5_Dir }}\plugins

    # 6. Package the compiled files into a zip archive
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: VeyonChat-Plugin-Windows
        path: |
          plugin_src/release/VeyonChat.dll
          plugin_src/plugin.json